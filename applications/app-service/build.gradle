plugins {
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
    id 'java'
}

dependencies {
	implementation project(':reactive-web')
	implementation 'org.reactivecommons.utils:object-mapper:0.1.0'
	implementation project(':r2dbc-mysql')
    implementation project(':model')
    implementation project(':usecase')
    implementation 'org.springframework.boot:spring-boot-starter'
    runtimeOnly('org.springframework.boot:spring-boot-devtools')
    testImplementation 'com.tngtech.archunit:archunit:1.4.0'
    testImplementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
    implementation 'org.flywaydb:flyway-core'
    runtimeOnly 'io.asyncer:r2dbc-mysql'

}

tasks.register('explodedJar', Copy) {
    with jar
    into layout.buildDirectory.dir("exploded")
}

def dotenv(String path) {
    def file = rootProject.file(path)
    if (!file.exists()) return [:]

    def env = [:]
    file.eachLine { line ->
        if (line && !line.startsWith("#") && line.contains('=')) {
            def (key, value) = line.split('=', 2)
            env[key.trim()] = value.trim()
        }
    }
    return env
}


jar {
    // To disable the *-plain.jar
    enabled = false
}

bootJar {
    archiveBaseName = 'franchise-api'
    archiveVersion = '0.0.1-SNAPSHOT'
}

bootRun {
    environment dotenv('.env')
}